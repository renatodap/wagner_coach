[pytest]
# pytest configuration for RAG service tests

# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test directories
testpaths = tests

# Markers for different test categories
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (may require external services)
    performance: Performance tests (may be slow)
    e2e: End-to-end tests (full system tests)
    slow: Slow tests (> 1 second)

# Coverage settings
addopts =
    --verbose
    --strict-markers
    --cov=rag_service
    --cov-report=html
    --cov-report=term-missing
    --cov-fail-under=80
    -p no:warnings

# Async support
asyncio_mode = auto

# Timeout for tests (seconds)
timeout = 30

# Parallel execution
# Uncomment to run tests in parallel
# -n auto

# Output settings
console_output_style = progress

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Minimum coverage per file
[coverage:report]
precision = 2
skip_empty = True
show_missing = True

exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod

[coverage:html]
directory = htmlcov